# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'display.ui'
#
# Created by: PyQt5 UI code generator 5.15.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.
import re
from os import walk

from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtGui import QPixmap, QTransform
from PyQt5.QtWidgets import QFileDialog


class Ui_MainWindow(object):
    def __init__(self):
        self.src = []
        self.dictpath = None
        self.index = 0
        self.rotation = 0

    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(807, 634)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.centralwidget)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.scrollArea = QtWidgets.QScrollArea(self.centralwidget)
        self.scrollArea.setWidgetResizable(True)
        self.scrollArea.setObjectName("scrollArea")
        self.scrollAreaWidgetContents = QtWidgets.QWidget()
        self.scrollAreaWidgetContents.setGeometry(QtCore.QRect(0, 0, 781, 565))
        self.scrollAreaWidgetContents.setObjectName("scrollAreaWidgetContents")
        self.gridLayout = QtWidgets.QGridLayout(self.scrollAreaWidgetContents)
        self.gridLayout.setObjectName("gridLayout")
        self.label = QtWidgets.QLabel(self.scrollAreaWidgetContents)
        self.label.setObjectName("label")
        self.gridLayout.addWidget(self.label, 0, 0, 1, 1, alignment=QtCore.Qt.AlignCenter)
        self.scrollArea.setWidget(self.scrollAreaWidgetContents)
        self.verticalLayout_2.addWidget(self.scrollArea)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 807, 22))
        self.menubar.setObjectName("menubar")
        self.menuFile = QtWidgets.QMenu(self.menubar)
        self.menuFile.setObjectName("menuFile")
        self.menuEdit = QtWidgets.QMenu(self.menubar)
        self.menuEdit.setObjectName("menuEdit")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.actionOpen = QtWidgets.QAction(MainWindow)
        self.actionOpen.setObjectName("actionOpen")
        self.actionOpen.triggered.connect(self.openfile)
        self.actionRotationRight = QtWidgets.QAction(MainWindow)
        self.actionRotationRight.setObjectName("actionRotationRight")
        self.actionRotationRight.triggered.connect(self.rotation_right)
        self.actionRotationLeft = QtWidgets.QAction(MainWindow)
        self.actionRotationLeft.setObjectName("actionRotationLeft")
        self.actionRotationLeft.triggered.connect(self.rotation_left)

        self.menuFile.addAction(self.actionOpen)
        self.menuEdit.addAction(self.actionRotationRight)
        self.menuEdit.addAction(self.actionRotationLeft)
        self.menubar.addAction(self.menuFile.menuAction())
        self.menubar.addAction(self.menuEdit.menuAction())

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.label.setText(_translate("MainWindow", "show image here"))
        self.menuFile.setTitle(_translate("MainWindow", "File"))
        self.menuEdit.setTitle(_translate("MainWindow", "Edit"))
        self.actionOpen.setText(_translate("MainWindow", "Open"))
        self.actionRotationRight.setText(_translate("MainWindow", "Right Rotation"))
        self.actionRotationLeft.setText(_translate("MainWindow", "Left Rotation"))

    def openfile(self):
        self.dictpath = QFileDialog.getExistingDirectory(self.centralwidget, 'open directory', '.')
        for root, dirs, files in walk(self.dictpath):
            files.sort(key=lambda f: int(re.sub('\D', '', f)))
            self.src = files
        self.label.setPixmap(QPixmap(self.dictpath + '/' + self.src[0]))

    def previous_page(self):
        count = len(self.src)
        self.index = (self.index - 1) % count
        self.label.setPixmap(QPixmap(self.dictpath + '/' + self.src[self.index]))
        print("index: " + str(self.index))

    def next_page(self):
        count = len(self.src)
        self.index = (self.index + 1) % count
        self.label.setPixmap(QPixmap(self.dictpath + '/' + self.src[self.index]))
        print("index: " + str(self.index))

    def rotation_right(self):
        pixmap = QPixmap(self.dictpath + '/' + self.src[self.index])
        self.rotation += 90
        transform = QTransform().rotate(self.rotation)
        pixmap = pixmap.transformed(transform, QtCore.Qt.SmoothTransformation)
        self.label.setPixmap(pixmap)

    def rotation_left(self):
        pixmap = QPixmap(self.dictpath + '/' + self.src[self.index])
        self.rotation -= 90
        transform = QTransform().rotate(self.rotation)
        pixmap = pixmap.transformed(transform, QtCore.Qt.SmoothTransformation)
        self.label.setPixmap(pixmap)


if __name__ == "__main__":
    import sys
    from pynput import keyboard

    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()

    def on_press(key):
        try:
            print('alphanumeric key {0} pressed'.format(
                key.char))
        except AttributeError:
            if key == keyboard.Key.left:
                ui.previous_page()
            if key == keyboard.Key.right:
                ui.next_page()


    listener = keyboard.Listener(on_press=on_press)
    listener.start()

    sys.exit(app.exec_())
